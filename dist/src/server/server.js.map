{"version":3,"file":"server.js","sourceRoot":"","sources":["../../../src/server/server.ts"],"names":[],"mappings":"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","sourcesContent":["import express from \"express\";\nimport type { Request, Response } from \"express\";\nimport path from \"path\";\nimport bodyParser from \"body-parser\";\nimport { spawn, ChildProcess } from \"child_process\";\nimport dotenv from \"dotenv\";\nimport helmet from \"helmet\";\nimport cors from \"cors\";\nimport { createLogger, format, transports } from \"winston\";\n\n// Load environment variables\ndotenv.config();\n\n// Define interfaces\ninterface SSEClient extends Response {\n  isAlive?: boolean;\n}\n\ninterface RunRequest {\n  prompt: string;\n  tag: string;\n  env?: string;\n}\n\ninterface ErrorResponse {\n  error: string;\n  details?: unknown;\n}\n\n// Configure logger\nconst logger = createLogger({\n  format: format.combine(\n    format.timestamp(),\n    format.json()\n  ),\n  transports: [\n    new transports.Console(),\n    new transports.File({ filename: 'error.log', level: 'error' }),\n    new transports.File({ filename: 'combined.log' })\n  ]\n});\n\n// Initialize Express app\nconst app = express();\nconst publicDir = path.join(process.cwd(), \"src\", \"server\", \"public\");\n\n// Security middleware\napp.use(helmet({\n  contentSecurityPolicy: {\n    directives: {\n      defaultSrc: [\"'self'\"],\n      scriptSrc: [\"'self'\", \"'unsafe-inline'\"],\n      styleSrc: [\"'self'\", \"'unsafe-inline'\"],\n      imgSrc: [\"'self'\", \"data:\", \"https:\"],\n    },\n  },\n}));\n\napp.use(cors({\n  origin: process.env['CORS_ORIGIN'] || '*',\n  methods: ['GET', 'POST'],\n  credentials: true\n}));\n\napp.use(bodyParser.json());\napp.use(express.static(publicDir));\n\n// Store SSE clients\nconst clients = new Set<SSEClient>();\nconst activeProcesses = new Set<ChildProcess>();\n\n// Health check for clients\nsetInterval(() => {\n  clients.forEach(client => {\n    if (client.isAlive === false) {\n      clients.delete(client);\n      return;\n    }\n    client.isAlive = false;\n    client.write(': ping\\n\\n');\n  });\n}, 30000);\n\n// SSE endpoint\napp.get(\"/events\", (req: Request, res: SSEClient) => {\n  res.writeHead(200, {\n    'Content-Type': 'text/event-stream',\n    'Cache-Control': 'no-cache',\n    'Connection': 'keep-alive'\n  });\n\n  res.write('\\n');\n  res.isAlive = true;\n  clients.add(res);\n\n  req.on('close', () => {\n    clients.delete(res);\n    logger.info('Client disconnected');\n  });\n});\n\n// Run test endpoint\napp.post(\"/run\", (req: Request<{}, any, RunRequest>, res: Response): Response | void => {\n  try {\n    const { prompt, tag, env } = req.body;\n\n    if (!prompt || !tag) {\n      const error: ErrorResponse = { error: \"Missing required fields\" };\n      if (!prompt) error.details = \"prompt is required\";\n      if (!tag) error.details = \"tag is required\";\n      return res.status(400).json(error);\n    }\n\n    if (env) {\n      if (![\"qa\", \"uat\", \"prod\"].includes(env)) {\n        return res.status(400).json({\n          error: \"Invalid environment\",\n          details: `env must be one of: qa, uat, prod`\n        });\n      }\n      process.env['ENV'] = env;\n    }\n\n    const args = [\"run\", \"ai:run\", tag];\n    const child = spawn(\"npm\", args, {\n      env: process.env,\n      stdio: ['ignore', 'pipe', 'pipe']\n    });\n\n    activeProcesses.add(child);\n\n    child.stdout.on(\"data\", (data) => {\n      broadcast(String(data));\n      logger.debug(String(data));\n    });\n\n    child.stderr.on(\"data\", (data) => {\n      const error = String(data);\n      broadcast(`ERROR: ${error}`);\n      logger.error(error);\n    });\n\n    child.on(\"close\", (code) => {\n      const message = `Process exited with code ${code}`;\n      broadcast(message);\n      logger.info(message);\n      activeProcesses.delete(child);\n    });\n\n    res.json({ status: \"started\", tag });\n  } catch (error) {\n    logger.error('Error in /run endpoint:', error);\n    res.status(500).json({\n      error: \"Internal server error\",\n      details: error instanceof Error ? error.message : String(error)\n    });\n  }\n});\n\n// Broadcast message to all connected clients\nfunction broadcast(message: string): void {\n  const formattedMessage = `data: ${message.trim()}\\n\\n`;\n  clients.forEach(client => {\n    try {\n      client.write(formattedMessage);\n    } catch (error) {\n      logger.error('Error broadcasting to client:', error);\n      clients.delete(client);\n    }\n  });\n}\n\n// Graceful shutdown\nfunction gracefulShutdown(signal: string) {\n  return () => {\n    logger.info(`Received ${signal}. Starting graceful shutdown...`);\n\n    // Close all client connections\n    clients.forEach(client => {\n      try {\n        client.end();\n      } catch (error) {\n        logger.error('Error closing client connection:', error);\n      }\n    });\n    clients.clear();\n\n    // Terminate all child processes\n    activeProcesses.forEach(process => {\n      try {\n        process.kill();\n      } catch (error) {\n        logger.error('Error terminating child process:', error);\n      }\n    });\n    activeProcesses.clear();\n\n    // Exit process\n    process.exit(0);\n  };\n}\n\n// Handle shutdown signals\nprocess.on('SIGTERM', gracefulShutdown('SIGTERM'));\nprocess.on('SIGINT', gracefulShutdown('SIGINT'));\n\n// Handle uncaught errors\nprocess.on('uncaughtException', (error) => {\n  logger.error('Uncaught exception:', error);\n  gracefulShutdown('uncaughtException')();\n});\n\nprocess.on('unhandledRejection', (error) => {\n  logger.error('Unhandled rejection:', error);\n  gracefulShutdown('unhandledRejection')();\n});\n\n// Start server\nconst port = process.env['PORT'] || 3333;\napp.listen(port, () => {\n  logger.info(`Web UI running at http://localhost:${port}`);\n});\n"]}